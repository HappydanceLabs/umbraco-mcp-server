/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Umbraco Delivery API
 * You can find out more about the Umbraco Delivery API in [the documentation](https://docs.umbraco.com/umbraco-cms/reference/content-delivery-api).
 * OpenAPI spec version: Latest
 */
import type {
	GetUmbracoDeliveryApiV2SearchItemsParams,
	ProblemDetails,
	SearchApiResponse
} from '.././schemas'

import { UmbracoClient, UmbracoClientOptions } from '../../clients/umbraco-client'

export type getUmbracoDeliveryApiV2SearchItemsResponse200 = {
	data: SearchApiResponse
	status: 200
}

export type getUmbracoDeliveryApiV2SearchItemsResponse401 = {
	data: ProblemDetails
	status: 401
}

export type getUmbracoDeliveryApiV2SearchItemsResponseComposite =
	| getUmbracoDeliveryApiV2SearchItemsResponse200
	| getUmbracoDeliveryApiV2SearchItemsResponse401

export type getUmbracoDeliveryApiV2SearchItemsResponse =
	getUmbracoDeliveryApiV2SearchItemsResponseComposite & {
		headers: Headers
	}

export const getGetUmbracoDeliveryApiV2SearchItemsUrl = (
	params?: GetUmbracoDeliveryApiV2SearchItemsParams
) => {
	const normalizedParams = new URLSearchParams()

	Object.entries(params || {}).forEach(([key, value]) => {
		if (value !== undefined) {
			normalizedParams.append(key, value === null ? 'null' : value.toString())
		}
	})

	const stringifiedParams = normalizedParams.toString()

	return stringifiedParams.length > 0
		? `/umbraco/delivery/api/v2/search/items?${stringifiedParams}`
		: '/umbraco/delivery/api/v2/search/items'
}

export const getUmbracoDeliveryApiV2SearchItems = async (
	params?: GetUmbracoDeliveryApiV2SearchItemsParams,
	options?: RequestInit
): Promise<getUmbracoDeliveryApiV2SearchItemsResponse> => {
	return UmbracoClient<getUmbracoDeliveryApiV2SearchItemsResponse>(
		getGetUmbracoDeliveryApiV2SearchItemsUrl(params),
		{
			...(options as UmbracoClientOptions),
			method: 'GET'
		}
	)
}
